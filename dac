#!/usr/bin/python
import argparse
import os
import shutil
import sys

def parseArgs():
    parser = argparse.ArgumentParser(description='Copy a file from base/default into a user specified theme and commit the file.')
    parser.add_argument('File', metavar='file', 
                       help='the file in base/default which we want to copy to our theme.')
    parser.add_argument('Package', metavar='package',
                       help='the package to duplicate the template to.')
    parser.add_argument('-t', metavar='theme', default="default",
                       help='the theme to duplicate the template to (default: default).')

    args = parser.parse_args()
    return args

# Get a filepath like catalog/product/list.phtml from the absolute path
def getFilename(absolutePath):
    delimiter = ''
    if '/layout/' in absolutePath:
        delimiter = '/layout/'
    elif '/template/' in absolutePath:
        delimiter = '/template/'
        
    filename = absolutePath.split(delimiter)
    filename = filename[1]
    return filename

# Commence the running!
args = parseArgs()
template = args.File
package = args.Package
theme = args.t

src = os.path.abspath(template)
dest = os.path.abspath(template)


if 'base/default/' in dest:
    dest = dest.replace('base/default', package + '/' + theme)
elif 'kl/default' in dest:
    dest = dest.replace('kl/default', package + '/' + theme)

print src
print '=>'
print dest

destPath = dest.split('/');
destFilename = getFilename(dest)
destPath = destPath[:len(destPath)-1] #Chop off the filename
destPath = '/'.join(destPath)

if not os.path.isdir(destPath):
    # We should also make sure the package exists.. Maybe the user has made a typo.
    packagePath = destPath.split('/')
    packagePath = packagePath[0:packagePath.index(package)+1]
    packagePath = '/'.join(packagePath)
    response = ''
    if not os.path.isdir(packagePath):
        while True:
            print "WARNING! The package %s doesn't seem to exist. Proceed? (Y/N) " % (package,)
            response = raw_input('').lower()
            if response in ['y', 'n']:
                break;

    if response == 'n':
        print "Aborting."
        sys.exit(-1);

    os.makedirs(destPath)
try:
    response = ''
    if os.path.exists(dest):
        while True:
            print "WARNING! This file seems to already exist. Proceed? (Y/N) "
            response = raw_input('').lower()
            if response in ['y', 'n']:
                break;


    if response == 'n':
        print "Aborting."
        sys.exit(-1);

    shutil.copy2(src, dest)
except IOError as e:
    print e



print "Copy successful"